# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLoginAcceso_v1():
  
  def setup_method(self, method):
    self.driver = webdriver.Chrome()  # Initialize the driver here
  
  def teardown_method(self, method):
    self.driver.quit()

  @pytest.fixture(scope="class")
  def driver(self):
    driver = webdriver.Chrome()
    driver.maximize_window()
    yield driver
    driver.quit()
  
  def test_loginAcceso_v1(self):
    self.driver.get("http://localhost:4200/login")
    self.driver.set_window_size(1340, 1142)
    time.sleep(1)  # Pausa por 1 segundo...
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("williams@gmail.com")
    time.sleep(1) 
    self.driver.find_element(By.ID, "password").send_keys("admin123456")
    time.sleep(1) 
    self.driver.find_element(By.CSS_SELECTOR, ".bg-indigo-600").click()
    time.sleep(1) 
    self.driver.find_element(By.ID, "titulo").click()
    time.sleep(1) 
    self.driver.find_element(By.LINK_TEXT, "Salir").click()

  def test_login_campos_vacios(self):
    self.driver.get("http://localhost:4200/login")
    self.driver.set_window_size(1340, 1142)
    time.sleep(1)
    
    # Click en el campo email y password
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "password").click()
    
    # Mouse over y mouse out en el botón de login
    login_button = self.driver.find_element(By.CSS_SELECTOR, ".bg-indigo-600")
    ActionChains(self.driver).move_to_element(login_button).perform()
    ActionChains(self.driver).move_by_offset(10, 10).perform()
    
    # Click en el botón de login
    login_button.click()
    
    # Click en el botón de confirmación de SweetAlert
    time.sleep(1)  # Espera a que aparezca el mensaje de error
    self.driver.find_element(By.CSS_SELECTOR, ".swal2-confirm").click()

  def test_login_incorrect_credentials(self):
    self.driver.get("http://localhost:4200/login")
    self.driver.set_window_size(1340, 1142)
    time.sleep(1)  # Pausa por 1 segundo...
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("incorrecto@gmail.com")
    self.driver.find_element(By.ID, "password").send_keys("incorrecto123")
    self.driver.find_element(By.CSS_SELECTOR, ".bg-indigo-600").click()

  def test_loginAcceso_multiples(self):
    # Lista de usuarios (asumiendo que cada elemento es un diccionario con 'email' y 'password')
    usuarios = [
        {"email": "user1@gmail.com", "password": "password1"},
        {"email": "user2@gmail.com", "password": "password1"},
        {"email": "user3@gmail.com", "password": "password_incorrecto"},
        {"email": "user4@gmail.com", "password": "password1"},
        {"email": "user5@gmail.com", "password": "password_incorrecto"},
        {"email": "user6@gmail.com", "password": "password1"},
        {"email": "user7@gmail.com", "password": "password1"},
        {"email": "user8@gmail.com", "password": "password_incorrecto"},
        {"email": "user9@gmail.com", "password": "password1"},
        {"email": "user10@gmail.com", "password": "password1"}
    ]
    
    for usuario in usuarios:
        # Abre la página de login
        self.driver.get("http://localhost:4200/login")
        self.driver.set_window_size(1340, 1142)
        time.sleep(1)  # Pausa por 1 segundo...
        
        # Llena el campo de email
        self.driver.find_element(By.ID, "email").click()
        self.driver.find_element(By.ID, "email").clear()
        self.driver.find_element(By.ID, "email").send_keys(usuario["email"])
        
        # Llena el campo de contraseña
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").clear()
        self.driver.find_element(By.ID, "password").send_keys(usuario["password"])
        
        # Clic en el botón de login
        self.driver.find_element(By.CSS_SELECTOR, ".bg-indigo-600").click()
        time.sleep(2)  # Pausa para esperar la respuesta de login
        
        # Verificación de login y navegación
        try:
            # Intenta hacer clic en el título y luego en "Salir" si el login fue exitoso
            self.driver.find_element(By.ID, "titulo").click()
            time.sleep(1) 
            self.driver.find_element(By.LINK_TEXT, "Salir").click()
        except:
            print(f"Login fallido para el usuario: {usuario['email']}")
        
        time.sleep(1)  # Pausa antes de la siguiente iteración



